name: CICD

on:
  push:
    branches: [main]
    
jobs:
  build-and-deploy:
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.WS_SECRET_ACCESS_KEY }}
         aws-region: eu-north-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
         mask-password: 'true'

      - name: Build, tag, and push docker image to Amazon ECR
        id: ecr-build
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: nodejs-app
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "image= $REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
      - name: Render Amazon ECS task definition
        id: nodejs-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
         task-definition: nodejs-app-task-def.json
         container-name: nodejs-app
         image: $ {{ steps.ecr-build.outputs.image}}
      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
         task-definition: ${{ steps.nodejs-container.outputs.task-definition}}
         service: nodejs-app-service
         cluster: DevCluster
         wait-for-service-stability: true
